{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielmanso/Desktop/pp-react/src/pages/Dashboard/index.tsx\";\nimport React, { useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories, Error } from './style';\n\nconst Dashboard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositorio');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositorio');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"GitHub Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, \"Explore reposit\\xF3rios no GitHub\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: !!inputError,\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    placeholder: \"Digite o nome do reposit\\xF3rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"Pesquisar\")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, inputError), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"a\", {\n    key: repository.full_name,\n    href: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/gabrielmanso/Desktop/pp-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","FiChevronRight","api","Title","Form","Repositories","Error","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","handleAddRepository","event","preventDefault","response","get","repository","data","err","logoImg","e","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\nimport { Title, Form, Repositories, Error } from './style';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string,\n    avatar_url: string,\n  };\n\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError]= useState('');\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  async function handleAddRepository (event:FormEvent<HTMLFormElement>\n    ):Promise<void> {\n    event.preventDefault();\n\n      if (!newRepo){\n        setInputError('Digite o autor/nome do repositorio')\n        return;\n      }\n\n    try {\n    const response = await api.get<Repository>(`repos/${newRepo}`);\n\n    const repository = response.data;\n\n    setRepositories([...repositories, repository]);\n    setNewRepo('');\n    } catch(err){\n      setInputError('Erro na busca por esse repositorio')\n    }\n  }\n\n\n  return (\n    <>\n    <img src={logoImg} alt=\"GitHub Explorer\"/>\n  <Title>Explore repositórios no GitHub</Title>\n\n  <Form hasError={!!inputError} onSubmit={ handleAddRepository}>\n    <input\n    value = {newRepo}\n    onChange={(e) => setNewRepo(e.target.value)}\n    placeholder=\"Digite o nome do repositório\"\n     />\n    <button type=\"submit\">Pesquisar</button>\n  </Form>\n\n  { inputError && <Error>{inputError}</Error> }\n\n  <Repositories>\n    {repositories.map(repository => (\n      <a key={repository.full_name} href =\"teste\">\n    <img src= {repository.owner.avatar_url} alt= {repository.owner.login}/>\n    <div>\n      <strong>{repository.full_name}</strong>\n    <p>{ repository.description}</p>\n    </div>\n\n    <FiChevronRight size={20} />\n    </a>\n    ))}\n\n  </Repositories>\n  </>\n    );\n};\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}